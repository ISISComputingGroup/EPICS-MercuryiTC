
# Initially auto-generated
# 

# 
# Definitions from configSection "frontpanel" in XML input file
#
#     lvDCOMConfigure("$(port)", "frontpanel", "/path/to/lvinput.xml")
# 
# MACROS for IOC
# P - base name of the IOC including IOC number and panel number
# IOC_NUM - the ioc's number sets the first panel number (e.g. Mercury - Front Panel $(IOC_NUM) - LEVEL $(VI_LEVEL_X)
# VI_LEVEL_1 - the first level panel number (usually 1 or blank for do not use)
# VI_LEVEL_2 - the first level panel number (usually 2 or blank for do not use)
# VI_LEVEL_3 - the first level panel number (usually 3 or blank for do not use)
# VI_LEVEL_4 - the first level panel number (usually 4 or blank for do not use)
      
## Creating both stringout/stringin and waveform records for "Name" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
## EPICS strings are restricted to 40 characters in length, if your strings are
## longer than this choose the character waveform records and adjust NELM if necessary

# Read LabVIEW control/indicator "Name" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
record(stringin, "$(P)NAME")
{
    field(DESC, "Name")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(port),0,0)NAME")
    field(SCAN, ".1 second")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:NAME")
    field(SDIS, "$(P)DISABLE")
}
alias( "$(P)NAME",  "$(P)NAME:SP:RBV")

# Write to LabVIEW control "Name" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
record(stringout, "$(P)NAME:SP")
{
    field(DESC, "Set the name")
    field(DTYP, "asynOctetWrite")
    #NOTE: This does push the value to the real thing, with some asyn magic
    # but in SIM mode it doesn't push its value, it pulls it from the SIM:NAME instead
    # (as waveforms are really input records)
    field(OUT,  "@asyn($(port),0,0)NAME")
    info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:NAME:SP")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "Activity" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
record(bi, "$(P)ACTIVITY")
{
    field(DESC, "Activity")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(port),0,0)ACTIVITY")
    field(SCAN, ".1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:ACTIVITY")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "He Level" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
record(ai, "$(P)HELIUM")
{
    field(DESC, "Helium level")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(port),0,0)HELIUM")
    field(PREC, "3")
    field(SCAN, ".1 second")
    field(EGU, "%")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HELIUM")
    field(SDIS, "$(P)DISABLE")
}

# Read LabVIEW control/indicator "N2 Level" on "C:/LabVIEW Modules/Drivers/Oxford Instruments/Mercury/Mercury - Level.llb/Mercury - Front Panel 1 - Level 1.vi"
record(ai, "$(P)NITROGEN")
{
    field(DESC, "Nitrogen level")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(port),0,0)NITROGEN")
    field(PREC, "3")
    field(SCAN, ".1 second")
    field(EGU, "%")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:NITROGEN")
    field(SDIS, "$(P)DISABLE")
}

####################
## DISABLE RECORD ##
####################

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "0")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

########################
## SIMULATION RECORDS ##
########################

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(waveform, "$(P)SIM:NAME")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(FTVL, "CHAR")
    field(NELM, "256")
}
alias("$(P)SIM:NAME", "$(P)SIM:NAME:SP")
alias("$(P)SIM:NAME", "$(P)SIM:NAME:SP:RBV")

record(bo, "$(P)SIM:ACTIVITY")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(ao, "$(P)SIM:HELIUM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:NITROGEN")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
